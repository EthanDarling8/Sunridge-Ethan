@page
@model Sunridge.Pages.Home.Documents.IndexModel
@using Sunridge.Utility
@{
    ViewData["Title"] = "Documents";
}


<h1>Documents</h1>

<div class="row">

    @* Left nav bar: Display management and category buttons *@
    <div class="col-3">

        @* Links to manage documents only visible to admin *@
        @if (User.IsInRole(SD.AdministratorRole))
        {
            <div class="mb-4 pb-1 border-bottom">
                <h5 class="row mb-1 justify-content-center">Manage Documents</h5>

                <div class="row mb-1">
                    <a class="btn btn-block btn-primary" asp-page="/Admin/Document/Category/Index">Categories</a>
                </div>

                <div class="row mb-1">
                    <a class="btn btn-block btn-primary" asp-page="/Admin/Document/File/Index">Files</a>
                </div>

                <div class="row mb-1">
                    <a class="btn btn-block btn-primary" asp-page="/Admin/Document/Section/Index">Sections</a>
                </div>

                <div class="row mb-1">
                    <a class="btn btn-block btn-primary" asp-page="/Admin/Document/SectionText/Index">Section Text</a>
                </div>
            </div>
        }


        @*Clear filters (Search and Selected Category*@
        <div class="row mb-3">
            @*Highlight no filters*@
            @if (Model.SelectedCategory == null && Model.Search == null)
            {
                <a asp-page="Index" class="btn btn-block btn-outline-primary" style="border-radius:2px;" asp-route-Id="">Clear&nbsp;Filters</a>
            }
            else
            {
                <a asp-page="Index" class="btn btn-block btn-outline-secondary" style="border-radius:2px;" asp-route-Id="">Clear&nbsp;Filters</a>
            }
        </div>


        @* Category Selection Buttons *@
        <div class="mb-3">
            <h5 class="row mb-1 justify-content-center">Document Categories</h5>

            @* No Categories Added Yet *@
            @if (Model.DocumentCategoryList.Count() == 0)
            {
                <h5 class="row mb-1 justify-content-center text-danger"> - No Categories - </h5>
            }

            @foreach (var category in Model.DocumentCategoryList)
            {
				@* **** ToDo **** Only display categories with stuff in them unless admin *@
				@* THIS CURRENTLY DOESNT WORK because these lists change when a category is selected.
				@if(Model.DocumentSectionList.Where(s => s.DocumentCategoryId == category.Id).Count() == 0 &&
					Model.DocumentFileList.Where(f => f.DocumentCategoryId == category.Id).Count() == 0 &&
					!User.IsInRole(SD.AdministratorRole))
                {

                }
				*@

				<div class="row mb-1">

					@*Highlight Selected Category*@
					@if (Model.SelectedCategory != null && Model.SelectedCategory.Id == category.Id)
					{
						<a asp-page="Index"
							class="btn btn-block btn-outline-primary"
							style="border-radius:2px;"
							asp-route-selectedCategoryId="@category.Id">
							@category.Name
						</a>
					}
					else
					{
						<a asp-page="Index"
							class="btn btn-block btn-outline-secondary"
							style="border-radius:2px;"
							asp-route-selectedCategoryId="@category.Id">
							@category.Name
						</a>
					}

				</div>
                
            }
        </div>


        @* Search Box *@
        <div class="mb-3">
            <h5 class="row mb-1">Search</h5>

            @* Category Selected *@
            @if (Model.SelectedCategory != null)
            {
				<form class="row mb-1" method="post" asp-page-handler="Search">
					<input type="search" asp-for="Search" id="search" class="col" placeholder="@("Search " + @Model.SelectedCategory.Name)" />
					<button class="col-2 btn btn-outline-secondary" type="submit" asp-route-selectedCategoryId="@Model.SelectedCategory.Id" asp-page-handler="Search"><i class="fas fa-search"></i></button>
				</form>

				@if(Model.Search != null)
                {
					@* Clear Search *@
					<a class="col-12 btn btn-outline-secondary" asp-route-selectedCategoryId="@Model.SelectedCategory.Id" asp-page="Index"><i class="far fa-times-circle"></i> Clear Search</a>
				}
				
            }
            @* No Category Selected *@
            else
            {
                <form class="row mb-1" method="post" asp-page-handler="Search">
                    <input type="search" asp-for="Search" id="search" class="col-10" placeholder="Search" />
                    <button class="col-2 btn btn-outline-secondary" type="submit" asp-page-handler="Search"><i class="fas fa-search"></i></button>
                </form>

				@if(Model.Search != null)
                {				
					@* Clear Search *@
					<a class="col-12 btn btn-block btn-outline-secondary" asp-page="Index"><i class="far fa-times-circle"></i> Clear Search</a>
				}
			}
        </div>
        
    </div>




    @* Display Search results / files / sections / anything else *@
    @if (Model.SelectedCategory != null || Model.Search != null)
    {
        <div class="col-8 ml-3">			

			@* Display Selected Category *@
			@if (Model.SelectedCategory != null)
			{
				<div class="col-12">
					<h2 class="row ml-1">@Model.SelectedCategory.Name</h2>
				</div>
			}
		
		
			@* Display Search Results *@
            @if (Model.Search != null)
            {
				<div class="mb-5">
				
					<div class="border-bottom mb-3">
						<h3 class="row ml-1">Search Results</h3>
						<h4 class="row ml-4 text-secondary">@('"' + Model.Search + '"')</h4>
					</div>


					@* **** ToDO **** add file keywords to all of this *@


					@* No Results *@
					@if (Model.SearchedDocumentSectionList.Count() == 0 &&
					Model.SearchedDocumentSectionTextList.Count() == 0 &&
					Model.SearchedDocumentFileList.Count() == 0)
					{
						<h4 class="row ml-1 text-danger"> - No Results - </h4>
					}


					@*Links to matching File Names/Keywords*@
					@if (Model.SearchedDocumentFileList.Count() > 0)
					{
						<div class="col-12 ml-1 mb-3">
							<h6 class="row">Files</h6>

							@foreach (Models.DocumentFile documentFile in Model.SearchedDocumentFileList)
							{
								<a class="row" href="Documents?@("selectedCategoryId="+documentFile.DocumentCategoryId)#@("file"+documentFile.Id)">@documentFile.Name</a>
							}
						</div>
					}				
					
					
					@*Links to matching DocumentSection Names*@
					@if (Model.SearchedDocumentSectionList.Count() > 0)
					{
						<div class="col-12 ml-1 mb-3">
							<h6 class="row">Sections</h6>

							@foreach (Models.DocumentSection documentSection in Model.SearchedDocumentSectionList)
							{
								<a class="row" href="Documents?@("selectedCategoryId="+documentSection.DocumentCategoryId)#@("section"+documentSection.Id)">@documentSection.Name</a>
							}
						</div>
					}
					
					
					@*Links to matching DocumentSectionText Names/Text*@
					@if (Model.SearchedDocumentSectionTextList.Count() > 0)
					{
						<div class="col-12 ml-1 mb-3">
							<h6 class="row">Text</h6>

							@foreach (Models.DocumentSectionText documentSectionText in Model.SearchedDocumentSectionTextList)
							{
								<a class="row" href="Documents?@("selectedCategoryId="+documentSectionText.DocumentSection.DocumentCategoryId)#@("heading"+@documentSectionText.Id)">@documentSectionText.Name</a>
							}
						</div>
					}
					
				</div>
				
            }


			@* If category selected, display *@
			@if (Model.SelectedCategory != null)
			{
				@* Display Files *@
				
				@* Header: Display only if there's files or to admin *@
				@if(Model.DocumentFileList.Count() > 0 || User.IsInRole(SD.AdministratorRole))
				{
					<h4 class="row mt-4 pt-1 pl-2 border-top">Downloadable Files</h4>
				}	
				

				@* No Files Added *@
				@if (Model.DocumentFileList.Count() == 0 && User.IsInRole(SD.AdministratorRole))
				{
					<div class="row">
						<h4 class="col text-danger"> - No Files - </h4>
					</div>
				}


				@* Display File Links *@
				@foreach (Models.DocumentFile documentFile in Model.DocumentFileList.Where(s => s.DocumentCategoryId == Model.SelectedCategory.Id))
				{
					<div class="row border">
						<a class="col btn btn-block text-primary" id="@("file"+documentFile.Id)" href="@documentFile.File">@documentFile.Name</a>

						@* Edit File Button *@
						@if (User.IsInRole(SD.AdministratorRole))
						{
							<a class="col-2 btn btn-outline-warning text-dark"
								asp-route-fileId="@documentFile.Id"
								asp-page="/Admin/Document/File/Upsert">
								<i class="far fa-edit"></i> Edit File
							</a>
						}
					</div>
				}


				@* Add File Button *@
				@if (User.IsInRole(SD.AdministratorRole))
				{
					<div class="col-12 mt-1 ml-2">
						<a class="col-2 btn btn-outline-primary text-dark"
							asp-page="/Admin/Document/File/Upsert">
							<i class=" fas fa-plus"></i> Add File
						</a>
					</div>
				}

				


				@* No Sections Added *@
				@if (Model.DocumentSectionList.Count() == 0 && User.IsInRole(SD.AdministratorRole))
				{
					<div class="row mt-4 pt-1 border-top">
						<h4 class="col text-danger"> - No Sections - </h4>
					</div>
				}


				@* Display Each Section *@
				<div class="accordion">
					@foreach (Models.DocumentSection documentSection in Model.DocumentSectionList.Where(s => s.DocumentCategoryId == Model.SelectedCategory.Id))
					{
						@* Display Section name *@
						<div class="row mt-4 pt-1 border-top">
							<h4 class="col" id="@("section"+@documentSection.Id)">
								@documentSection.Name

								@* Edit Section Button *@
								@if (User.IsInRole(SD.AdministratorRole))
								{
									<a class="col-3 btn btn-outline-warning text-dark"
									   asp-route-sectionId="@(documentSection.Id)"
									   asp-page="/Admin/Document/Section/Upsert">
										<i class="far fa-edit"></i> Edit Section
									</a>
								}
							</h4>
						</div>

						@* Display SectionText Name+Text *@
						foreach (Models.DocumentSectionText documentSectionText in Model.DocumentSectionTextList.Where(t => t.DocumentSectionId == documentSection.Id))
						{
							<div class="card z-depth-0 bordered">

								<div class="card-header row" id="@("heading"+@documentSectionText.Id)">
									<h5 class="mb-0 col">
										<button class="col btn btn-block collapsed" type="button" data-toggle="collapse"
												data-target="#@("collapse"+@documentSectionText.Id)" aria-expanded="false" aria-controls="@("collapse"+@documentSectionText.Id)">
											@documentSectionText.Name
										</button>
									</h5>

									@* Edit SectionText Button *@
									@if (User.IsInRole(SD.AdministratorRole))
									{
										<a class="col-2 btn btn-outline-warning text-dark"
										   asp-route-sectionTextId="@documentSectionText.Id"
										   asp-page="/Admin/Document/SectionText/Upsert">
											<i class=" far fa-edit"></i> Edit Text
										</a>
									}
								</div>

								<div id="@("collapse"+@documentSectionText.Id)" class="collapse" aria-labelledby="@("heading"+@documentSectionText.Id)">
									<div class="card-body">
										@Html.Raw(documentSectionText.Text)
									</div>
								</div>

							</div>
						}


						@* No SectionText Added *@
						@if (Model.DocumentSectionList.Count() == 0 && User.IsInRole(SD.AdministratorRole))
						{
							<div class="row mt-4 border-top">
								<h4 class="col text-danger"> - No Text - </h4>
							</div>
						}


						@*Add SectionText Button *@
						@if (User.IsInRole(SD.AdministratorRole))
						{
							<div class="col-12 mt-1 ml-3">
								<a class="col-2 btn btn-outline-primary text-dark"
								   asp-route-documentSectionId="@documentSection.Id"
								   asp-page="/Admin/Document/SectionText/Upsert">
									<i class=" fas fa-plus"></i> Add Text
								</a>
							</div>
						}
					}
				</div>


				@* Add Section Button *@
				@if (User.IsInRole(SD.AdministratorRole))
				{
					<div class="row mt-2">
						<a class="col mt-1 btn btn-outline-primary text-dark"
						   asp-page="/Admin/Document/Section/Upsert">
							<i class=" fas fa-plus"></i> Add Section
						</a>
					</div>
				}
			}

		</div>
    }

</div>

