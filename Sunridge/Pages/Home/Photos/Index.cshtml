@page
@model Sunridge.Pages.Home.Photos.IndexModel
@{
    ViewData["Title"] = "Photo Gallery";
}

@*TEMPORARY TEST LINKS*@
<a class="row" asp-page="../../Admin/PhotoCategory/Index">PhotoCategory Index</a>
<a class="row" asp-page="../../Admin/PhotoCategory/Upsert">PhotoCategory Upsert</a>

<div class="row m-1 p-1">

    @* **** ToDo **** Add authorization requirement to add and edit buttons.
        make the buttons link to the user id *@

    @*Display Add, Back, and Category buttons here*@
    <div class="col-3">
        @*Album selected*@
        @if (@Model.PhotoVM.SelectedPhotoAlbum != null)
        {
            @*Category Selected*@
            @if (@Model.PhotoVM.SelectedPhotoCategory != null)
            {
                @if (User.Identity.IsAuthenticated && Model.CurrentApplicationUser.Id == Model.PhotoVM.SelectedPhotoAlbum.ApplicationUserId)
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-route-selectedPhotoCategoryId="@Model.PhotoVM.SelectedPhotoCategory.Id"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Photo/Upsert">
                            <i class="fas fa-plus"></i> Add Photo
                        </a>
                    </div>

                    <div class="row mb-2">
                        <a class="btn btn-block btn-warning"
                           asp-route-selectedPhotoCategoryId="@Model.PhotoVM.SelectedPhotoCategory.Id"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Upsert">
                            <i class="far fa-edit"></i> Edit Album
                        </a>
                    </div>
                }

                <div class="row mb-2">
                    <a class="btn btn-block btn-secondary"
                       asp-route-selectedPhotoCategoryId="@Model.PhotoVM.SelectedPhotoCategory.Id"
                       asp-page="Index">
                        <i class="fas fa-arrow-left"></i> Back to Photo Gallery
                    </a>
                </div>
            }
            @*No Category Selected*@
            else
            {
                @if (User.Identity.IsAuthenticated && Model.CurrentApplicationUser.Id == Model.PhotoVM.SelectedPhotoAlbum.ApplicationUserId)
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Photo/Upsert">
                            <i class="fas fa-plus"></i> Add Photo
                        </a>
                    </div>

                    <div class="row mb-2">
                        <a class="btn btn-block btn-warning"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Upsert">
                            <i class="far fa-edit"></i> Edit Album
                        </a>
                    </div>
                }

                <div class="row mb-2">
                    <a class="btn btn-block btn-secondary"
                       asp-page="Index">
                        <i class="fas fa-arrow-left"></i> Back to Photo Gallery
                    </a>
                </div>
            }
        }

        @*No album selected*@
        else
        {
            @*Category Selected*@
            @if (@Model.PhotoVM.SelectedPhotoCategory != null)
            {
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-route-selectedPhotoCategoryId="@Model.PhotoVM.SelectedPhotoCategory.Id"
                           asp-page="/Owner/Photos/Album/Upsert">
                            <i class="fas fa-plus"></i> Add Album
                        </a>
                    </div>
                }
            }
            @*No Category Selected*@
            else
            {
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-page="/Owner/Photos/Album/Upsert">
                            <i class="fas fa-plus"></i> Add Album
                        </a>
                    </div>
                }
            }
            @* ****ToDo **** This needs to actually point the the user's albums *@
            @if (User.Identity.IsAuthenticated)
            {
                <div class="row mb-2">
                    <a class="btn btn-block btn-secondary"
                       asp-route-myAlbums="True"
                       asp-page="Index">
                        <i class="far fa-images"></i> My Albums
                    </a>
                </div>
            }
        }


        @*Display category filters here*@
        @*Only display the filters if an album isn't selected.*@
        @if (@Model.PhotoVM.SelectedPhotoAlbum == null)
        {
            <h5 class="row justify-content-center">Select an Album Category</h5>

            @*Clear Photo Category Selection*@
            <div class="row mb-1">
                @*Highlight no filters*@
                @if (Model.PhotoVM.SelectedPhotoCategory == null)
                {
                    <a asp-page="Index"
                       class="btn btn-block btn-outline-primary"
                       style="border-radius:2px;"
                       asp-route-selectedPhotoCategoryId="">
                        Show&nbsp;All
                    </a>
                }
                else
                {
                    <a asp-page="Index"
                       class="btn btn-block btn-outline-secondary"
                       style="border-radius:2px;"
                       asp-route-selectedPhotoCategoryId="">
                        Show&nbsp;All
                    </a>
                }
            </div>

            @*Photo Category Selection*@
            @foreach (var photoCategory in Model.PhotoVM.PhotoCategoryList)
            {
                @*Only display categories that have albums in them.*@
                @if (Model.PhotoVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == photoCategory.Id).Count() > 0)
                {
                    <div class="row mb-1">
                        @*Highlight Selected Category*@
                        @if (Model.PhotoVM.SelectedPhotoCategory != null && Model.PhotoVM.SelectedPhotoCategory.Id == photoCategory.Id)
                        {
                            <a asp-page="Index"
                               class="btn btn-block btn-outline-primary"
                               style="border-radius:2px;"
                               asp-route-selectedPhotoCategoryId="@photoCategory.Id">
                                @photoCategory.Name
                            </a>
                        }
                        else
                        {
                            <a asp-page="Index"
                               class="btn btn-block btn-outline-secondary"
                               style="border-radius:2px;"
                               asp-route-selectedPhotoCategoryId="@photoCategory.Id">
                                @photoCategory.Name
                            </a>
                        }
                    </div>
                }
            }
        }
    </div>




    @*Display rest of the page here*@
    <div class="col-9">

        @*Display only albums for selected category*@
        @if (Model.PhotoVM.SelectedPhotoCategory != null && Model.PhotoVM.SelectedPhotoAlbum == null)
        {
            <div class="row container">
                <div class="col-12">
                    <div class="row">

                        @*Category Name*@
                        <h2 class="col-12 border-bottom">@Model.PhotoVM.SelectedPhotoCategory.Name</h2>

                        @*Display all the albums for the selected category*@
                        <div class="col-12">
                            <div class="row my-3">
                                @foreach (var photoAlbum in Model.PhotoVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == @Model.PhotoVM.SelectedPhotoCategory.Id))
                                {
                                    //Use a partial view to generate the shoe card as this code is repeated frequently based on the filters set.
                                    Model.PhotoAlbum = photoAlbum;

                                    <partial name="Home/Photos/Views/_PhotoAlbumCard" />
                                }
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }


        @*Display all photos for the selected album*@
        else if (Model.PhotoVM.SelectedPhotoAlbum != null)
        {
            <div class="row container">

                @*Display Album Information Here*@
                @*Album Title*@
                <h2 class="col-12">@Model.PhotoVM.SelectedPhotoAlbum.Title</h2>

                <div class="border col-12">       
                    @*Category*@
                    <h4 class="col-12 mt-1 text-secondary">@Model.PhotoVM.SelectedPhotoAlbum.PhotoCategory.Name</h4>
                    @*Description*@
                    <div class="col-12 mt-2">@Html.Raw(Model.PhotoVM.SelectedPhotoAlbum.Description)</div>
                </div>
               

                @*Display all the photos for the selected album*@
                <div class="col-12">
                    <div class="row my-3">
                        @*No photos added yet*@
                        @if (Model.PhotoVM.PhotoList.Count() == 0)
                        {
                        <h3 class="col-12 ml-1 text-danger">Album Is Empty</h3>
                        }
                        else
                        {
                            @foreach (var photo in Model.PhotoVM.PhotoList)
                            {
                                //Use a partial view to generate the shoe card as this code is repeated frequently based on the filters set.
                                Model.Photo = photo;

                                <partial name="Home/Photos/Views/_PhotoCard" />
                            }
                        }                        
                    </div>
                </div>

            </div>
        }


        @*Display all albums (no cateogry selected, no album selected)*@
        else
        {
            <div class="row container">
                <div class="col-12">
                    <div class="row">

                        @foreach (var photoCategory in Model.PhotoVM.PhotoCategoryList)
                        {
                            @*Only Display Categories with Albums in Them*@
                            @if (Model.PhotoVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == photoCategory.Id).Count() > 0)
                            {
                                @*Category Name*@
                                <h2 class="col-12 border-bottom">@photoCategory.Name</h2>

                                @*Display all the albums for the selected category*@
                                <div class="col-12">
                                    <div class="row my-3">
                                        @foreach (var photoAlbum in Model.PhotoVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == @photoCategory.Id))
                                        {
                                            //Use a partial view to generate the shoe card as this code is repeated frequently based on the filters set.
                                            Model.PhotoAlbum = photoAlbum;
                                            //Model.AlbumCreator = Model.PhotoVM.AlbumCreatorList.Where(u => u.Id == Model.PhotoAlbum.ApplicationUserId).FirstOrDefault();

                                            <partial name="Home/Photos/Views/_PhotoAlbumCard" />
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

