@page
@model Sunridge.Pages.Home.Photos.IndexModel
@using Sunridge.Utility
@{
    ViewData["Title"] = "Photo Gallery";
}

<h1 class="row mb-4">Photo Gallery</h1>

<div class="row">

    @*Display Add, Back, and Category buttons here*@
    <div class="col-3">
        @*Album selected*@
        @if (@Model.PhotoGalleryVM.SelectedPhotoAlbum != null)
        {
            @*Category Selected*@
            @if (@Model.PhotoGalleryVM.SelectedPhotoCategory != null)
            {
                @if ((User.Identity.IsAuthenticated && Model.CurrentOwner.Id == Model.PhotoGalleryVM.SelectedPhotoAlbum.OwnerId) ||
            User.IsInRole(SD.AdministratorRole))
                {
                    @*Add Photo*@
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-route-selectedPhotoCategoryId="@Model.PhotoGalleryVM.SelectedPhotoCategory.Id"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoGalleryVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Photo/Upsert">
                            <i class="fas fa-plus"></i>&nbsp;Add&nbsp;Photo
                        </a>
                    </div>

                    @*Edit Album*@
                    <div class="row mb-2">
                        <a class="btn btn-block btn-warning"
                           asp-route-selectedPhotoCategoryId="@Model.PhotoGalleryVM.SelectedPhotoCategory.Id"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoGalleryVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Upsert">
                            <i class="far fa-edit"></i>&nbsp;Edit&nbsp;Album
                        </a>
                    </div>

                    @*Delete Album*@
                    <div class="row mb-2">
                        <a onClick=Delete('/api/photoAlbum/'+@Model.PhotoGalleryVM.SelectedPhotoAlbum.Id)
                           class="btn btn-block btn-danger text-white">
                            <i class="far fa-trash-alt"></i>&nbsp;Delete&nbsp;Album
                        </a>
                    </div>
                }
                else
                {
                    @*Display "login to manage photos" if not logged in.*@
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-area="Identity"
                           asp-page="/Account/Login">
                            Login&nbsp;to&nbsp;Manage&nbsp;Photos
                        </a>
                    </div>
                }


                @* "Back To Gallery" Button *@
                <div class="row mb-2">
                    <a class="btn btn-block btn-secondary"
                       asp-route-selectedPhotoCategoryId="@Model.PhotoGalleryVM.SelectedPhotoCategory.Id"
                       asp-page="Index">
                        <i class="fas fa-arrow-left"></i>&nbsp;Back&nbsp;to&nbsp;Gallery
                    </a>
                </div>
            }
            @*No Category Selected*@
            else
            {
                @if ((User.Identity.IsAuthenticated && Model.CurrentOwner.Id == Model.PhotoGalleryVM.SelectedPhotoAlbum.OwnerId) ||
             User.IsInRole(SD.AdministratorRole))
                {
                    @*Add Photo*@
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoGalleryVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Photo/Upsert">
                            <i class="fas fa-plus"></i>&nbsp;Add&nbsp;Photo
                        </a>
                    </div>

                    @*Edit Album*@
                    <div class="row mb-2">
                        <a class="btn btn-block btn-warning"
                           asp-route-selectedPhotoAlbumId="@Model.PhotoGalleryVM.SelectedPhotoAlbum.Id"
                           asp-page="/Owner/Photos/Album/Upsert">
                            <i class="far fa-edit"></i>&nbsp;Edit&nbsp;Album
                        </a>
                    </div>

                    @*Delete Album*@
                    <div class="row mb-2">
                        <a onClick=Delete('/api/photoAlbum/'+@Model.PhotoGalleryVM.SelectedPhotoAlbum.Id)
                           class="btn btn-block btn-danger text-white">
                            <i class="far fa-trash-alt"></i>&nbsp;Delete&nbsp;Album
                        </a>
                    </div>
                }
                else
                {
                    @*Display "login to manage photos" if not logged in.*@
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-area="Identity"
                           asp-page="/Account/Login">
                            Login&nbsp;to&nbsp;Manage&nbsp;Photos
                        </a>
                    </div>
                }

                @* "Back To Gallery" Button *@
                <div class="row mb-2">
                    <a class="btn btn-block btn-secondary"
                       asp-page="Index">
                        <i class="fas fa-arrow-left"></i>&nbsp;Back&nbsp;to&nbsp;Gallery
                    </a>
                </div>
            }
        }


        @*No album selected. Display management buttons to logged in owners. *@
        else
        {
            @if (User.Identity.IsAuthenticated)
            {
                @* Display "Manage Categories" to admins (board members) *@
                @if (User.IsInRole(SD.AdministratorRole))
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-primary"
                           asp-page="/Admin/PhotoCategory/Index">
                            Manage Categories
                        </a>
                    </div>
                }

                @* Ignore selected category when adding new album *@
                <div class="row mb-2">
                    <a class="btn btn-block btn-primary"
                       asp-page="/Owner/Photos/Album/Upsert">
                        <i class="fas fa-plus"></i>&nbsp;Add&nbsp;Album
                    </a>
                </div>

                if (@Model.MyAlbums == false)
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-secondary"
                           asp-route-myAlbums="True"
                           asp-page="Index">
                            <i class="far fa-images"></i>&nbsp;My&nbsp;Albums
                        </a>
                    </div>
                }
                else
                {
                    <div class="row mb-2">
                        <a class="btn btn-block btn-secondary"
                           asp-page="Index">
                            <i class="fas fa-arrow-left"></i>&nbsp;Back&nbsp;to&nbsp;Photo&nbsp;Gallery
                        </a>
                    </div>
                }
            }

            @*Display "login to manage photos" if not logged in.*@
            else
            {
                <div class="row mb-2">
                    <a class="btn btn-block btn-primary"
                       asp-area="Identity"
                       asp-page="/Account/Login">
                        Login&nbsp;to&nbsp;Manage&nbsp;Photos
                    </a>
                </div>
            }
        }





        @*Display category filters here, only if not displaying "My Albums" or a selected album.*@
        @*Only display the filters if an album isn't selected.*@
        @if (@Model.PhotoGalleryVM.SelectedPhotoAlbum == null && @Model.MyAlbums == false)
        {
            <h5 class="row justify-content-center">Album Categories</h5>

            @*Clear Photo Category Selection*@
            <div class="row mb-1">
                @*Highlight no filters*@
                @if (Model.PhotoGalleryVM.SelectedPhotoCategory == null)
                {
                    <a asp-page="Index"
                       class="btn btn-block btn-outline-primary"
                       style="border-radius:2px;"
                       asp-route-selectedPhotoCategoryId="">
                        Show&nbsp;All
                    </a>
                }
                else
                {
                    <a asp-page="Index"
                       class="btn btn-block btn-outline-secondary"
                       style="border-radius:2px;"
                       asp-route-selectedPhotoCategoryId="">
                        Show&nbsp;All
                    </a>
                }
            </div>

            @*Photo Category Selection*@
            @foreach (var photoCategory in Model.PhotoGalleryVM.PhotoCategoryList)
            {
                @*Only display categories that have albums in them.*@
                @if (Model.PhotoGalleryVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == photoCategory.Id).Count() > 0)
                {
                    <div class="row mb-1">
                        @*Highlight Selected Category*@
                        @if (Model.PhotoGalleryVM.SelectedPhotoCategory != null && Model.PhotoGalleryVM.SelectedPhotoCategory.Id == photoCategory.Id)
                        {
                            <a asp-page="Index"
                               class="btn btn-block btn-outline-primary"
                               style="border-radius:2px;"
                               asp-route-selectedPhotoCategoryId="@photoCategory.Id">
                                @photoCategory.Name
                            </a>
                        }
                        else
                        {
                            <a asp-page="Index"
                               class="btn btn-block btn-outline-secondary"
                               style="border-radius:2px;"
                               asp-route-selectedPhotoCategoryId="@photoCategory.Id">
                                @photoCategory.Name
                            </a>
                        }
                    </div>
                }
            }
        }
    </div>




    @*Display rest of the page here*@
    <div class="col-9">

        @*Display only albums for selected category*@
        @if (Model.PhotoGalleryVM.SelectedPhotoCategory != null && Model.PhotoGalleryVM.SelectedPhotoAlbum == null)
        {
            <div class="row container">
                <div class="col-12">
                    <div class="row">

                        @*Category Name*@
                        <h2 class="col-12 border-bottom">@Model.PhotoGalleryVM.SelectedPhotoCategory.Name</h2>

                        @*Display all the albums for the selected category*@
                        <div class="col-12">
                            <div class="row my-3">
                                @foreach (var photoAlbum in Model.PhotoGalleryVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == @Model.PhotoGalleryVM.SelectedPhotoCategory.Id))
                                {
                                    Model.PhotoAlbum = photoAlbum;                                    

                                    //Use a partial view as this code is repeated
                                    <partial name="Home/Photos/Views/_PhotoAlbumCard" />
                                }
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }


        @*Display all photos for the selected album*@
        else if (Model.PhotoGalleryVM.SelectedPhotoAlbum != null)
        {
            @*Display Album Information Here*@
            <div class="ml-1">

                @*Album Title*@
                <div class="row ml-1">
                    <h2 class="">@Model.PhotoGalleryVM.SelectedPhotoAlbum.Title</h2>
                </div>

                <div class="pl-3 pt-2 border text-secondary">
                    @*Creator*@
                    <div class="row">
                        <h5 class="col-2">Creator:</h5>
                    </div>
                    <div class="col-12">@Model.PhotoGalleryVM.SelectedPhotoAlbum.Owner.FullName</div>

                    @*Category*@
                    <div class="row">
                        <h5 class="col-2">Category:</h5>
                    </div>
                    <div class="col-12">@Model.PhotoGalleryVM.SelectedPhotoAlbum.PhotoCategory.Name</div>

                    @*Description*@
                    <div class="row">
                        <h5 class="col-2">Description:</h5>
                    </div>
                    <div class="col-12">@Html.Raw(Model.PhotoGalleryVM.SelectedPhotoAlbum.Description)</div>
                </div>
            </div>


            @*Display all the photos for the selected album*@
            <div class="container">
                <div class="col-12">
                    <div class="row my-3 gallery">
                        @*No photos added yet*@
                        @if (Model.PhotoGalleryVM.PhotoList.Count() == 0)
                        {
                            <h3 class="col-12 ml-1 text-danger">Album Is Empty</h3>
                        }
                        else
                        {
                            @foreach (var photo in Model.PhotoGalleryVM.PhotoList)
                            {
                                //Use a partial view to generate the shoe card as this code is repeated frequently based on the filters set.
                                Model.Photo = photo;

                                <partial name="Home/Photos/Views/_PhotoCard" />
                            }
                        }
                    </div>
                </div>
            </div>
        }


        @*Display all albums (no cateogry selected, no album selected)*@
        else
        {
            <div class="row container">
                <div class="col-12">
                    <div class="row">
                        @foreach (var photoCategory in Model.PhotoGalleryVM.PhotoCategoryList)
                        {
                            @*Only Display Categories with Albums in Them*@
                            @if (Model.PhotoGalleryVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == photoCategory.Id).Count() > 0)
                            {
                                @*Category Name*@
                                <h2 class="col-12 border-bottom">@photoCategory.Name</h2>

                                @*Display all the albums category*@
                                <div class="col-12">
                                    <div class="row mb-3">
                                        @foreach (var photoAlbum in Model.PhotoGalleryVM.PhotoAlbumList.Where(a => a.PhotoCategoryId == @photoCategory.Id))
                                        {
                                            Model.PhotoAlbum = photoAlbum;                                            

                                            //Use a partial view as this code is repeated
                                            <partial name="Home/Photos/Views/_PhotoAlbumCard" />
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>




@section Scripts{
    <link rel="Stylesheet" href="~/css/general/photos.css" type="text/css" />

    <script>
        function Delete(url) {
            swal({
                title: "Are you sure you want to Delete?",
                text: "This will also delete all associated photos! You will not be able to restore the data!",
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: 'DELETE',
                        url: url,
                        success: function (data) {
                            if (data.success) {
                                toastr.success(data.message);      
                                setTimeout(() => { window.location.replace("/Home/Photos/Index");  }, 1000);                                                                                            
                            }
                            else {
                                toastr.error(data.message);
                            }
                        }
                    });
                }
            });
        }
    </script>




    <script>
        window.addEventListener('load', function () {
            baguetteBox.run('.gallery', {
                // Custom options
                captions: true,
                titleTag: true
            });
        });
    </script>
}
